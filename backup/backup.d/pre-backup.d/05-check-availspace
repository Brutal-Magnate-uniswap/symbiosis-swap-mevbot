#!/usr/bin/perl

#Relies upon libfilesys-df-perl

use strict;
my $has_filesysdf  = eval "use Filesys::Df; 1;";
use Switch;

my $rv = 1;

print "=> Checking there is enough free space for a backup...\n\n";

unless ($has_filesysdf)
{
        print "!! Perl module Filesys::Df is not installed, exiting and so not completing backup\n\n";
        $rv = 1;
}
else
{
        open my $fh, '<', '/etc/backup2l.conf' or die "Unable to open file: $!\n";
        my %hash = map { split /=|\s+/; } <$fh>;
        close $fh;
        while (my ($key, $val) = each %hash)
        {
                if($key eq "BACKUP_DIR")
                {
                        $val =~ s/"//g;

                        my $ref = df($val);
                        my $divis = 0;
                        my $gb_available =  $ref->{bavail} / 1e6;

                        printf "*  Free space on %s: %8.1f GB\n", $val, $gb_available;

                        my $est_output = `backup2l --estimate --conf /etc/symbiosis/backup.d/backup2l.conf 2> /dev/null`;
                        $est_output =~ /^\s*[0-9].*\/ ([0-9A-Z.]+) \(uncompressed\)$/m;
                        my $estimate = $1;
                        $estimate =~ /(?<int>[-+]?[0-9]*\.?[0-9]+)(?<suff>[A-Z]+)/;

                        switch($+{suff})
                        {
                                case "B"        {  $divis = 1e-9; }
                                case "KB"       {  $divis = 1e-6; }
                                case "MB"       {  $divis = 1e-3; }
                                case "GB"       {  $divis = 1; }
                                case "TB"       {  $divis = 1e3; }
                                else            {  $divis = 1;}
                        }
                        my $value_in_gb = $+{int} * $divis;

                        printf "*  Estimated backup size:                %8.1f GB\n\n", $value_in_gb;

                        if($gb_available < $value_in_gb)
                        {
                                printf "!! There is not enough space to take a backup.  Aborting!\n\n";
                                $rv = 1;
                        }
                        else
                        {
                                printf "=> There is enough space to take a backup.\n\n";
                                $rv = 0;
                        }
                }
        }
}

exit $rv;
