#!/bin/bash

set -e

#
# Skip, if we are not in "configure" state
#
if [ "$1" != "configure" ]; then
        echo "I: Skipping configuration"
        exit 0
fi

#
#  Remove existing PAMAuthentication setup,
#
find /etc/pure-ftpd/auth/ -lname "*/PAMAuthentication"  -exec rm -f \{\} \;
find /etc/pure-ftpd/auth/ -lname "*/UnixAuthentication" -exec rm -f \{\} \;

#
# Edit our defaults to set it to "standalone"
#
if [ -f /etc/default/pure-ftpd-common ] ; then
  sed -i -e 's/STANDALONE_OR_INETD=inetd/STANDALONE_OR_INETD=standalone/' /etc/default/pure-ftpd-common
fi

#
# Disable our inetd service
#
if [ -f /etc/inetd.conf -a -x /usr/sbin/update-inetd ] ; then
  update-inetd --disable ftp
  # Don't really care if this errors.
  invoke-rc.d  openbsd-inetd restart || true
fi

#
# Always reconfigure to allow external authentication.
# 
find /etc/pure-ftpd/auth/ -lname "*/ExtAuth" -exec rm -f \{\} \;
ln -sf /etc/pure-ftpd/conf/ExtAuth /etc/pure-ftpd/auth/60ext

#
#  Always show dotfiles.
#
echo "yes" > /etc/pure-ftpd/conf/DisplayDotFiles

#
#  Use our authentication method
#
echo "/var/run/pure-ftpd/pure-authd.sock" > /etc/pure-ftpd/conf/ExtAuth

##
# SSL cert generation now in symbiosis-common
##

#
#  Link in the certificate if we have one.
#
if [ ! -e /etc/ssl/private/pure-ftpd.pem ]; then
    ln -s /etc/ssl/ssl.combined /etc/ssl/private/pure-ftpd.pem
fi

#
#  TLS should be enabled if we did the linking.
#
echo '1' > /etc/pure-ftpd/conf/TLS

#
# Update default runlevels.
#
if [ -x "/etc/init.d/pure-authd" ]; then
  update-rc.d pure-authd defaults >/dev/null
fi

if [ -x "/etc/init.d/pure-ftpd" ]; then
  update-rc.d pure-ftpd defaults >/dev/null
fi

#
#  Restart (or start)
#
if [ "$2" = "" ] ; then
  action=start
else
  action=restart
fi

invoke-rc.d pure-authd $action

#
# Pure-ftpd seems not create its pidfile on a fresh install.  If it is running,
# kill it off.
#

pid=`pgrep pure-ftpd` 

if [ -n "$pid" -a ! -f /var/run/pure-ftpd/pure-ftpd.pid ] ; then
  kill $pid
fi

invoke-rc.d pure-ftpd  $action

#DEBHELPER#
exit 0
