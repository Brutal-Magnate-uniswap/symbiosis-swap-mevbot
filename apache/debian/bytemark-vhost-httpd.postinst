#!/bin/sh

set -e

#
# Skip, if we are not in "configure" state
#
if [ "$1" != "configure" ]; then
        echo "I: Skipping configuration"
        exit 0
fi

#
#  Remove default site
#
if [ -e /etc/apache2/sites-enabled/000-default ]; then
    rm -f /etc/apache2/sites-enabled/000-default
fi


#
#  If there isn't an admin account add it.
#
if ( ! grep ^admin: /etc/passwd 2>/dev/null >/dev/null ); then

    echo "Adding 'admin' account"
    useradd  --home=/srv admin --shell=/bin/bash

    #
    #  Now set the same  password for admin if it isn't there
    #
    usermod -p $(grep root /etc/shadow | awk -F: '{print $2}') admin
fi

#
#  Add group if missing
#
if ( ! grep ^admin: /etc/group 2>/dev/null >/dev/null ); then
    addgroup admin
fi

if [ ! -d /srv ]; then
    mkdir /srv
    chown admin:admin /srv
fi


#
#  Shadow passwords must be on
#
/sbin/shadowconfig on 2>/dev/null >/dev/null


#
#  If we don't have the sudoers file setup then configure it
#
if [ -e /etc/sudoers ]; then

    #
    #  Not already present?
    #
    if ( ! grep ^admin /etc/sudoers 2>/dev/null >/dev/null ); then

        #
        #  Add it.
        #
        echo 'admin ALL = (ALL) ALL' >> /etc/sudoers
    fi
fi



#
#  Make sure we have /srv/
#
if [ ! -d /srv ]; then

    #
    #  Create the directory
    #
    mkdir /srv

    # make it writeable.
    if ( grep ^admin: /etc/passwd >/dev/null 2>/dev/null ); then
        chown admin:admin /srv
    fi
fi

#
#  If there are no directories beneath /srv/ create a default one.
#
if [ $(ls -l /srv/ | grep ^d | wc -l) -lt 1 ] ; then

    #
    #  Roots
    #
    mkdir -p /srv/$(hostname --fqdn)/public/htdocs
    mkdir -p /srv/$(hostname --fqdn)/public/cgi-bin
    mkdir -p /srv/$(hostname --fqdn)/mailboxes/root

    #
    #  Copy the password if present
    #
    for i in /etc/bytemark-vhost/ /etc/ ; do
        if [ -e $i/.vhost.pass ]; then
            cat $i/.vhost.pass > /srv/$(hostname --fqdn)/mailboxes/root/password
        fi
    done

    chown -R admin:admin /srv/
fi


#
#  Remove any existing sites.
#
for i in mass-hosting mass-hosting.ssl zz-mass-hosting zz-mass-hosting.ssl default 00-default ; do
    if [ -e /etc/apache2/sites-enabled/$i ]; then
        rm /etc/apache2/sites-enabled/$i
    fi
done

#
#  Find IP address of the first interfaces
#
ip=$(ifconfig  eth0 | grep 'inet addr' | awk -F: '{print $2}' | awk '{print $1}' )


#
#  Create the mass-hosting configuration file
#
cat > /etc/apache2/sites-available/zz-mass-hosting <<EOF

####
##
#
# DO NOT EDIT THIS FILE - CHANGES WILL BE OVERWRITTEN
#
#  This file is automatically generated.
#
#  http://symbiosis.bytemark.co.uk/docs/ch-webreference.html 
#
##
###

NameVirtualHost $ip:80

<VirtualHost $ip:80>

        #
        #  This is the directory people are redirected to
        # if their site is empty.
        #
        Alias /bytemark/ "/var/www/bytemark/"
        <Directory "/var/www/bytemark/">
                DirectoryIndex index.html index.php
                AllowOverride All
        </Directory>


        #
        #  And this makes that redirection happen.
        #
        <LocationMatch "^/+$">
                Options -Indexes
                ErrorDocument 403 /bytemark/
        </LocationMatch>


        #
        #  Allow users to override settings via .htaccess
        #
        <Directory "/srv">
                AllowOverride all
        </Directory>


        #
        #  We will allow global CGIs without any effort though.
        #
        AddHandler cgi-script .cgi


        #
        #  Disable the "single" name for this server.
        #
        UseCanonicalName        Off


        #
        #  Aliases for testing sites prior to DNS migration.
        #
        RewriteEngine On
        RewriteCond %{HTTP_HOST} ^(.*)\.testing\.(.*)\$
        RewriteRule ^/(.*)\$  /srv/%1/public/htdocs/\$1


        #
        #  The document root + CGI-directories.
        #
        VirtualDocumentRoot     /srv/%0/public/htdocs/
        VirtualScriptAlias      /srv/%0/public/cgi-bin/


        #
        # Update documentroot settings for each vhost.
        #
        SetVirtualDocumentRoot on

        #
        #  We need to log the virtual hostname the incoming request was
        # made against, so that the cron-job in /etc/cron.daily may generate
        # statistics for each domain.
        #
        CustomLog /var/log/apache2/access.log "%V %h %l %u %t \"%r\" %>s %b \"%{Referer}i\" \"%{User-agent}i\""
</VirtualHost>


EOF


cat > /etc/apache2/sites-available/zz-mass-hosting.ssl <<EOF

####
##
#
# DO NOT EDIT THIS FILE - CHANGES WILL BE OVERWRITTEN
#
#  This file is automatically generated.
#
#  http://vhost.bytemark.co.uk/docs/ch-webreference.html 
#
##
###

NameVirtualHost $ip:443

<VirtualHost $ip:443>

        #
        #  Ensure that the SSL options are configured.
        #
        SSLEngine On
        SSLCertificateFile /etc/ssl/ssl.combined
        SSLOptions +StrictRequire


        #
        #  This is the directory people are redirected to
        # if their site is empty.
        #
        Alias /bytemark/ "/var/www/bytemark/"
        <Directory "/var/www/bytemark/">
                DirectoryIndex index.html index.php
                AllowOverride All
        </Directory>

        #
        #  And this makes that redirection happen.
        #
        <LocationMatch "^/+$">
                Options -Indexes
                ErrorDocument 403 /bytemark/
        </LocationMatch>


        #
        #  Allow users to override settings via .htaccess
        #
        <Directory "/srv">
                AllowOverride all
        </Directory>


        #
        #  We will allow global CGIs without any effort though.
        #
        AddHandler cgi-script .cgi


        #
        #  Disable the "single" name for this server.
        #
        UseCanonicalName        Off


        #
        #  Aliases for testing sites prior to DNS migration.
        #
        RewriteEngine On
        RewriteCond %{HTTP_HOST} ^(.*)\.testing\.(.*)\$
        RewriteRule ^/(.*)\$  /srv/%1/public/htdocs/\$1


        #
        #  The document root + CGI-directories.
        #
        VirtualDocumentRoot     /srv/%0/public/htdocs/
        VirtualScriptAlias      /srv/%0/public/cgi-bin/


        #
        # Update documentroot settings for each vhost.
        #
        SetVirtualDocumentRoot on

        #
        #  We need to log the virtual hostname the incoming request was
        # made against, so that the cron-job in /etc/cron.daily may generate
        # statistics for each domain.
        #
        CustomLog /var/log/apache2/access.log "%V %h %l %u %t \"%r\" %>s %b \"%{Referer}i\" \"%{User-agent}i\""
</VirtualHost>


EOF


#
#  Ensure we listen for SSL requests
#
if ( ! grep 443 /etc/apache2/ports.conf >/dev/null 2>/dev/null ); then
    echo "Listen 443" >> /etc/apache2/ports.conf
fi

#
#  Make the key
#
if [ ! -e /etc/ssl/ssl.combined ]; then

    #
    #  Make the key
    #
    openssl req  -subj "/C=GB/ST=England/L=York/CN=$(cat /etc/hostname)" -new -x509 -days 3650 -nodes -out  /etc/ssl/ssl.pem -keyout /etc/ssl/ssl.key

    #
    #  Combine PEM + Key
    #
    cat /etc/ssl/ssl.key /etc/ssl/ssl.pem > /etc/ssl/ssl.combined
fi

#
#  Enable the new sites
#
a2ensite zz-mass-hosting           >/dev/null 2>/dev/null
a2ensite zz-mass-hosting.ssl       >/dev/null 2>/dev/null



#
#  Enable common modules
#
a2enmod rewrite      >/dev/null 2>/dev/null
a2enmod cgi          >/dev/null 2>/dev/null
a2enmod php5         >/dev/null 2>/dev/null
a2enmod ssl          >/dev/null 2>/dev/null
a2enmod dir          >/dev/null 2>/dev/null

#
#  Ensure that index.htm is valid.
#
cat > /etc/apache2/mods-enabled/dir.conf <<EOF
<IfModule mod_dir.c>
          DirectoryIndex index.html index.htm index.cgi index.pl index.php index.xhtml
</IfModule>
EOF


#
#  Use the bytemark module for mass-hosting.
#
a2enmod  mod_vhost_bytemark  >/dev/null 2>/dev/null
a2dismod vhost_alias         >/dev/null 2>/dev/null


#
#  If we have additional sites add them
#
if [ -x /etc/cron.hourly/configure-additional ]; then
    /etc/cron.hourly/configure-additional
fi


#
#  Restart Apache2.
#
if which invoke-rc.d >/dev/null 2>&1; then
    invoke-rc.d apache2 restart
else
    /etc/init.d/apache2 restart
fi

#DEBHELPER#
exit 0
