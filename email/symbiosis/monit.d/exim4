#!/usr/bin/ruby1.8 

require 'symbiosis/monitor/check'

class Exim4Check < Symbiosis::Monitor::Check

  def initialize
    super
    @process.pidfile = "/var/run/exim4/exim.pid"
    @process.initscript = "/etc/init.d/exim4"
    @name = "exim4"
  end

  def do_check
    return SystemExit::EX_CONFIG unless initscript_ok?

    r = do_process_check
    self.restart if SystemExit::EX_TEMPFAIL == r
    return r unless 0 == r

    resp = /^\d+\s/

    %w(smtp ssmtp).each do |proto|
      tcpconnection = Symbiosis::Monitor::TCPConnection.new(
        "localhost",
        proto,
        [resp, "EHLO localhost\r\n", resp, "QUIT\r\n", resp],
        "ssmtp" == proto
      )

      r = do_tcpconnection_check(tcpconnection)
      self.restart if SystemExit::EX_TEMPFAIL == r
      return r unless r == 0
    end

    return 0 
  end

  def do_tcpresponse_check(responses)
    bad = responses.find{|l| l !~ /^2\d+[ -]/}
    raise "Unexpected response '#{bad}'" unless bad.nil? 
  end

end

exit Exim4Check.new.do_check if $0 == __FILE__

