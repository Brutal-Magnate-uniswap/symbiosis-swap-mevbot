#!/usr/bin/ruby
#
# NAME
#
#   symbiosis-dns-generate - Generate DNS snippet files for Symbiosis domains. 
#
# SYNOPSIS
#
#   --force       Force the re-creation of all SSL sites.
#   --template    Specify an alternative template file to read.
#   --help        Show the help information for this script.
#   --verbose     Show debugging information.
#
# DETAILS
#
# This script is designed to iterate over the domains hosted upon a Symbiosis
# system, and create TinyDNS snippets for each one. 
#
# AUTHOR
#
# Steve Kemp <steve@bytemark.co.uk>
#


require 'getoptlong'


#
#  Entry point to the code
#
$FORCE    = false
$HELP     = false
$VERBOSE  = false

#
#  Do we need to restart apache?
#
$UPLOAD=false

#
# The root directory -- '/' by default.
#
root = "/"
non_dns_template = nil 
dns_template     = nil 
bytemarkdns_data_dir      = nil

opts = GetoptLong.new(
         [ '--help', '-h', GetoptLong::NO_ARGUMENT ],
         [ '--verbose', '-v', GetoptLong::NO_ARGUMENT ],
         [ '--template', '-t', GetoptLong::REQUIRED_ARGUMENT ],
         [ '--force', '-f', GetoptLong::NO_ARGUMENT ]
       )

opts.each do |opt, arg|
  case opt
  when '--help'
    $HELP = true
  when '--verbose'
    $VERBOSE = true
  when '--template'
    dns_template = arg
  when '--bytemarkdns-data-dir'
    bytemarkdns_data_dir = arg
  when '--root'
    root = arg
  when '--force'
    $FORCE = true
  end
end

#
# CAUTION! Here be quality kode.
#
if $HELP
  # Open the file, stripping the shebang line
  lines = File.open(__FILE__){|fh| fh.readlines}[2..-1]

  lines.each do |line|
    line.chomp!
    break if line.empty?
    puts line[2..-1].to_s
  end

  exit 0
end

def verbose(s)
  puts s if $VERBOSE
end

require 'symbiosis/domains'
require 'symbiosis/domain'
require 'symbiosis/config_files/tinydns'

#
# Set the default paths.
#
dns_template         = File.join(root, "/etc/symbiosis/dns.d/tinydns.template.erb") if dns_template.nil?
bytemarkdns_data_dir = File.join(root, "/root/BytemarkDNS/data") if bytemarkdns_data_dir.nil?

#
# Any arguments on the command line specify which domains to do.
#
domains_to_configure = ARGV

#
#  For each domain.
#
Symbiosis::Domains.each do |domain|

  verbose "Domain: #{domain.name} "

  next unless domains_to_configure.empty? or domains_to_configure.include?(domain.name)

  begin
    output        = File.join(domain.config_dir, "dns", domain.name+".txt")
    config        = Symbiosis::ConfigFiles::Tinydns.new(output, "#")
    config.domain   = domain
    config.template = dns_template

    if ( $FORCE )
      verbose "\tForcing re-creation of configuration due to --force."

    elsif config.exists?

      if config.changed?
        verbose "\tNot updating configuration, as it has been edited by hand."
        next

      elsif config.outdated?
        verbose "\tRe-creating configuration as it is out of date."

      else
        verbose "\tDomain already present and up-to date."
        next

      end

    else
      verbose "\tConfiguring site for the first time"

    end

    #
    # This gets apache2 to check the configuration using a temporary file.
    #
    if config.ok?

      verbose "\tWriting configuration"
      config.write
      
      # Definitely restart if we've rewritten the config.
      $UPLOAD = true

    else
      verbose "\tApache has rejected the new configuration -- no changes have been made."
    end

    #
    # Rescue errors for this domain, but continue for others.
    #
  rescue StandardError => err
    warn "\tUnable to create DNS data for #{domain.name} because #{err.to_s}"
    verbose "\t"+err.backtrace.join("\n\t")
  end
end

#
#  All done.
#
if ( $UPLOAD )
end
