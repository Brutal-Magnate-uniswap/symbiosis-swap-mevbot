

stages:
  - test
  - package
  - publish
  - fresh-install
  - install

.test: &test
  stage: test
  image: $CI_REGISTRY/docker-images/layers:jessie-ruby
  script:
    - "[ -z \"$TEST_DEPS\" ] || apt-get install $TEST_DEPS"
    - export PACKAGE=${CI_BUILD_NAME##test:}
    - cd $PACKAGE
    - "[ ! -f Makefile ] || make test"

test:backup:
  <<: *test
test:common:
  before_script:
    - adduser --gecos "Symbiosis Test User,,,," symbiosis-test
    - cp autotest/test.d/conf/maker-sources.list /etc/apt/sources.list.d/
    - apt-get update
  variables:
    TEST_DEPS: ruby ruby-acme-client ruby-linux-netlink ruby-cracklib ruby-erubis ruby-mocha ruby-webmock ruby-test-unit openssl cracklib-runtime
  
  <<: *test
test:cron:
  <<: *test
test:dns:
  <<: *test
test:doc:
  <<: *test
test:email:
  variables:
    TEST_DEPS: exim4-daemon-heavy
  <<: *test
test:firewall:
  <<: *test
test:ftpd:
  <<: *test
test:httpd:
  <<: *test
test:httpd-logger:
  variables:
    TEST_DEPS: golang-go
  <<: *test
test:meta:
  <<: *test
test:monit:
  <<: *test
test:mysql:
  <<: *test
test:phpmyadmin:
  <<: *test
test:updater:
  <<: *test
test:webmail:
  <<: *test
test:xmpp:
  <<: *test

.package: &package
  image: $CI_REGISTRY/docker-images/layers:jessie-deb
  stage: package
  script:
    - export PACKAGE=${CI_BUILD_NAME##package:}
    - echo "$CI_BUILD_NAME" -  "$PACKAGE" - "${CI_BUILD_NAME##package:}"
    - cd $PACKAGE
    - package
  artifacts:
    paths:
      - pkg/

package:common:
  <<: *package
package:backup:
  <<: *package
package:cron:
  <<: *package
package:dns:
  <<: *package
package:doc:
  <<: *package
package:email:
  <<: *package
package:firewall:
  <<: *package
package:ftpd:
  <<: *package
package:httpd:
  <<: *package
package:httpd-logger:
  <<: *package
package:meta:
  <<: *package
package:monit:
  <<: *package
package:mysql:
  <<: *package
package:phpmyadmin:
  <<: *package
package:updater:
  <<: *package
package:webmail:
  <<: *package
package:xmpp:
  <<: *package

publish:
  stage: publish
  variables:
    RSYNC_HOSTNAME: repo.bytemark.co.uk
  tags:
    - shell
  script:
    - publish

.install: &install
  stage: install
  image: $CI_REGISTRY/docker-images/base:jessie
  tags:
    - kvm
  variables:
    VERBOSE: --verbose
    HOSTNAME: installing.example.com
  script:
    - rm -fv /usr/sbin/policy-rc.d
    - cd autoinstall
    - echo ${CI_BUILD_NAME##install:} > install.d/conf/action
    - "echo deb http://repo.bytemark.co.uk/symbiosis/$CI_BUILD_REF_SLUG/$CI_PIPELINE_ID/ ./ >> install.d/conf/maker-sources.list"
    - run-parts $VERBOSE --new-session --exit-on-error $PWD/install.d 

install:dist-upgrade:
  <<: *install
  image: $CI_REGISTRY/docker-images/base:wheezy

install:upgrade:
  <<: *install

install:fresh-install:
  stage: fresh-install
  <<: *install


