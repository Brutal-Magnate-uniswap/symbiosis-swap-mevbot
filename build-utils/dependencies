#!/usr/bin/perl -w

=head1 NAME

dependencies - Report/Install any missing build dependencies.

=cut

=head1 SYNOPSIS


  General Options:

   --install     Install any missing dependencies.

  Help Options:

   --help        Show the help information for this script.
   --manual      Read the manual for this script.
   --verbose     Show useful debugging information.

=cut


=head1 ABOUT

This tool will both report and optionally install any missing
build dependencies for the package directory it is executed in.

Interally it is a thin wrapper around B<dpkg-checkbuilddeps>.

=cut


=head1 AUTHOR

Steve Kemp <steve@bytemark.co.uk>

=cut

=head1 LICENSE

Copyright (c) 2008-2010 Bytemark Computer Consulting Ltd.

This module is free software;
you can redistribute it and/or modify it under
the same terms as Perl itself.
The LICENSE file contains the full text of the license.

=cut



use strict;
use warnings;

use Getopt::Long;
use Pod::Usage;


#
#  Parse arguments
#
my %CONFIG;

if (
    !GetOptions(

        # Help options
        "help",   \$CONFIG{ 'help' },
        "manual", \$CONFIG{ 'manual' },

        # General options
        "install", \$CONFIG{ 'install' },
    ) )
{
    exit;
}


pod2usage(1) if $CONFIG{ 'help' };
pod2usage( -verbose => 2 ) if $CONFIG{ 'manual' };

#
#  Holder for the dependencies.
#
my %depends;


#
#  Run the dpkg-checkbuilddeps tool to get the files.
#
my $out = `dpkg-checkbuilddeps 2>&1`;
chomp($out);

if ( $out =~ /Unmet build dependencies: (.*)/i )
{
    my $missing = $1;

    #
    #  Strip out "(>= 3.x)" and similar.
    #
    while ( $missing =~ /^(.*)\([^)]+\)(.*)$/ )
    {
        $missing = $1 . " " . $2;
    }

    #
    #  Split each missing package up
    #
    foreach my $package ( split( / /, $missing ) )
    {

        #
        #  Trim leading/trailing whitespace.
        #
        $package =~ s/^\s+|\s+$//g;
        next unless ( length($package) );

        #
        #  Special-case. Ugh.
        #
        $package = "apache2-threaded-dev" if ( $package eq "apache2-dev" );

        #
        #  Save missing package away.
        #
        $depends{ $package } += 1;
    }
}


#
#  Are we OK?
#
my $count = scalar keys(%depends);
if ( !$count )
{
    exit 0;
}


#
#  Otherwise show the packages which are missing.
#
print "The following packages are missing:\n";
foreach my $package ( keys %depends )
{
    print "\t" . $package . "\n";
}

if ( $CONFIG{ 'install' } )
{
    print "Installing now:\n";

    $ENV{ 'DEBIAN_FRONTEND' } = "noninteractive";

    system("apt-get update");
    system(
        "apt-get -o \"APT::Get::AllowUnauthenticated=true\" -o \"DPkg::Options::=--force-confold\" install -y --force-yes "
          . join( " ", keys %depends ) );
}

exit 0;

