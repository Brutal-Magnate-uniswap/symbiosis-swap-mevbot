#!/usr/bin/perl -w

=head1 NAME

test-symbiosis-passwords - Test user-passwords for strength.

=head1 SYNOPSIS

  test-symbiosis-passwords [options]

  Testing modes:
   --hourly   Test only recently modified passwords.
   --weekly   Test all passwords.

  Help Options:
   --help     Show help information.
   --manual   Read the manual for this script.

  Misc Options:
   --verbose  Be verbose.

=cut


=head1 OPTIONS

=over 8

=item B<--help>
Show a brief overview of this script.

=item B<--hourly>
Test only passwords which have been recently modified.

=item B<--weekly>
Test all user-passwords.

=item B<--manual>
Show the manual.

=item B<--verbose>
Be verbose in execution.

=back

=cut


=head1 DESCRIPTION

 This script is designed to test the strength of all user-created
 passwords upon a machine running Bytemark Symbiosis.

 The testing of passwords works for

=over 8

=item FTP passwords

=item IMAP/mail passwords

=back

=cut


=head1 USAGE

  Basic usage is as simple as:

=for example begin

   test-symbiosis-passwords [--verbose]

=for example end

=cut


use strict;
use warnings;
use Getopt::Long;
use Pod::Usage;


#
#  Prefix
#
my %CONFIG;
$CONFIG{'PREFIX'} = "/srv/";


#
#  Parse arguments, if any
#
parseCommandLineArguments();

#
#  Ensure we don't have both hourly and weekly selected
#
if ( $CONFIG{'hourly'} && $CONFIG{'weekly'} )
{
    $CONFIG{'hourly'} = 1;
    $CONFIG{'weekly'} = undef;
}

#
#  If we have neither then we'll default to hourly.
#
if ( ( !$CONFIG{'hourly'} ) && ( ! $CONFIG{'weekly'} ) )
{
    $CONFIG{'hourly'} = 1;
}



#
#  This array contains a list of weak password files.
#
my @WEAK;




#
#  Test FTP passwords
#
foreach my $file ( sort( glob( "/srv/*/config/ftp-password" ) ) )
{
    $CONFIG{'verbose'} && print "Testing file: $file\n" ;

    testPasswordFile( $file ) if ( -e $file );
}

#
#  Test mailbox passwords
#
foreach my $file ( sort( glob( "/srv/*/mailboxes/*/password" ) ) )
{
    $CONFIG{'verbose'} && print "Testing file: $file\n" ;

    testPasswordFile( $file ) if ( -e $file );
}


#
#  Now we can alert.
#
if ( @WEAK )
{
    print <<EOF;

Security Alert
--------------

Using weak passwords may allow remote attackers to connect to your
server and read your email.  If your FTP password is weak remote
attackers may be able to connect to your server and download your
private files.

Details
-------

The following file(s) contain weak passwords:

EOF

  foreach my $file ( @WEAK )
  {
      print " * $file\n";
  }
  print <<EOF;

Need Help?
----------

For advice on securing your machine please consult:

   http://symbiosis.bytemark.co.uk/docs/ch-systemsecurity.html

EOF
}

=begin doc

  Output to the console any weak passwords in use.

=end doc

=cut

sub testPasswordFile
{
    my( $file ) = (@_);

    if ( ! -e $file )
    {
        die "testPassword($file) - File doesn't exist\n";
    }

    #
    #  If we're running in hourly mode only test the file
    # if it is recently modified.
    #
    if ( $CONFIG{'hourly'} && ( !$CONFIG{'force'} ))
    {
        if ( -M $file >= 1 )
        {
            $CONFIG{'verbose'} && print "\tSkipping file as it wasn't recently modified.\n";
            return;

        }
    }

    #
    #  Test the password in the specified file.
    #
    system( "/usr/bin/passwd-test '$file' >/dev/null 2>/dev/null" );

    my $ret = $? >> 8;
    if ( $ret )
    {
        push( @WEAK, $file );
    }
    else
    {
        $CONFIG{'verbose'} && print "\tPassword is OK\n";
    }
}




=begin doc

  Parse our command line arguments.

=end doc

=cut

sub parseCommandLineArguments
{
    my $HELP    = 0;
    my $MANUAL  = 0;

    #
    #  Parse options.
    #
    GetOptions(
        # modes
        "hourly", \$CONFIG{'hourly'},
        "weekly", \$CONFIG{'weekly'},
        "force", \$CONFIG{'force'},

        # Help options
        "help",    \$HELP,
        "manual",  \$MANUAL,
        "verbose", \$CONFIG{ 'verbose' },

    );

    pod2usage(1) if $HELP;
    pod2usage( -verbose => 2 ) if $MANUAL;
}
