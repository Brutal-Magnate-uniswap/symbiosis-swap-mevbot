#!/usr/bin/ruby 

require 'symbiosis/monitor/check'
require 'symbiosis/range'

class ApacheCheck < Symbiosis::Monitor::Check

  def initialize
    super
    @process.pidfile = "/var/run/apache2.pid"
    @process.initscript = "/etc/init.d/apache2"
    @name = "apache2"
  end

  def do_check
    return SystemExit::EX_CONFIG unless initscript_ok?

    r = do_process_check
    self.restart if SystemExit::EX_TEMPFAIL == r
    return r unless 0 == r

    %w(http https).each do |proto|
      tcpconnection = Symbiosis::Monitor::TCPConnection.new(
        Symbiosis::Range.primary_ip.to_s,
        proto,
        ["OPTIONS / HTTP/1.0\r\n","Host: localhost\r\n","\r\n",nil],
        "https" == proto )

      r = do_tcpconnection_check(tcpconnection)
      self.restart if SystemExit::EX_TEMPFAIL == r
      return r unless 0 == r
    end

    return 0
  end

  def do_tcpresponse_check(responses)
    raise Errno::EPROTO, "Unexpected response '#{responses.first}'" unless responses.first =~ /^HTTP\/\d+/
  end

end

exit ApacheCheck.new.do_check if $0 == __FILE__

