#!/usr/bin/ruby 

require 'symbiosis/monitor/check'

class DovecotCheck < Symbiosis::Monitor::Check

  def initialize
    super
    @process.pidfile = "/var/run/dovecot/master.pid"
    @process.initscript = "/etc/init.d/dovecot"
    @name = "dovecot"
  end

  def do_check
    return SystemExit::EX_CONFIG unless initscript_ok?

    tcpconnection = Symbiosis::Monitor::TCPConnection.new(
     "localhost",
     "pop3",
     [nil,"AUTH\r\n", nil, "QUIT\r\n",nil] )
    r = do_tcpconnection_check(tcpconnection)
    self.restart if SystemExit::EX_TEMPFAIL == r
    return r unless 0 == r

    tcpconnection.port = "imap"
    tcpconnection.script = [nil,"* CAPABILITY\r\n",nil,"* LOGOUT\r\n",nil]
    do_tcpconnection_check(tcpconnection)
    self.restart if SystemExit::EX_TEMPFAIL == r
    return r 
  end

  def do_response_check(responses)
    bad = responses.find{|r| r =~ /^\S+\s+(-ERR|NO|BAD)/}
    raise "Unexpected response '#{bad}'" unless bad.nil? 
  end

end

exit DovecotCheck.new.do_check if $0 == __FILE__

